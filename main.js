(()=>{"use strict";var n={38:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".edits {\n  height: 100vh;\n  width: 100vw;\n  z-index: 10;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(180, 180, 180, 0.397);\n}\n\n.editInputs {\n  z-index: 20;\n  padding: 20px;\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 5px;\n  height: 250px;\n  width: 500px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  font-size: 1.1rem;\n}\n\n.editInputs button {\n  padding: 5px;\n  width: 80px;\n}\n\n#editName,\n#editDesc {\n  margin-bottom: 10px;\n  border: 1px solid black;\n  border-radius: 2px;\n  padding: 5px;\n  font-size: 0.8rem;\n}\n\n#editName {\n  width: 100%;\n}\n\n#editDesc {\n  height: 80px;\n  width: 100%;\n}\n\n#editAccept {\n  margin-left: auto;\n}\n\n.newInputs {\n  margin-left: 30px;\n  padding: 10px;\n  width: min(500px, 100%);\n}\n\n.newName,\n.newDesc {\n  border: 1px solid grey;\n  border-radius: 3px;\n  padding: 5px;\n}\n\n.newName {\n  width: 100%;\n  font-size: 1rem;\n  margin-bottom: 10px;\n}\n\n.newDesc {\n  display: block;\n  width: 100%;\n  height: 100px;\n  font-size: 1rem;\n  margin-bottom: 10px;\n}\n\n.newDate {\n  padding: 3px;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n}\n\n.newInputBottom {\n  display: flex;\n  align-items: center;\n}\n\n.confirmNew,\n.cancelNew {\n  font-size: 0.9rem;\n}\n\n.confirmNew {\n  margin-left: auto;\n  margin-right: 10px;\n}\n","",{version:3,sources:["webpack://./src/components/editTodo.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,4CAA4C;AAC9C;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,uBAAuB;EACvB,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,aAAa;EACb,eAAe;EACf,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;;EAEE,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,uBAAuB;AACzB;;AAEA;;EAEE,sBAAsB;EACtB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,aAAa;EACb,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;;EAEE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB",sourcesContent:[".edits {\n  height: 100vh;\n  width: 100vw;\n  z-index: 10;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(180, 180, 180, 0.397);\n}\n\n.editInputs {\n  z-index: 20;\n  padding: 20px;\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 5px;\n  height: 250px;\n  width: 500px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  font-size: 1.1rem;\n}\n\n.editInputs button {\n  padding: 5px;\n  width: 80px;\n}\n\n#editName,\n#editDesc {\n  margin-bottom: 10px;\n  border: 1px solid black;\n  border-radius: 2px;\n  padding: 5px;\n  font-size: 0.8rem;\n}\n\n#editName {\n  width: 100%;\n}\n\n#editDesc {\n  height: 80px;\n  width: 100%;\n}\n\n#editAccept {\n  margin-left: auto;\n}\n\n.newInputs {\n  margin-left: 30px;\n  padding: 10px;\n  width: min(500px, 100%);\n}\n\n.newName,\n.newDesc {\n  border: 1px solid grey;\n  border-radius: 3px;\n  padding: 5px;\n}\n\n.newName {\n  width: 100%;\n  font-size: 1rem;\n  margin-bottom: 10px;\n}\n\n.newDesc {\n  display: block;\n  width: 100%;\n  height: 100px;\n  font-size: 1rem;\n  margin-bottom: 10px;\n}\n\n.newDate {\n  padding: 3px;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n}\n\n.newInputBottom {\n  display: flex;\n  align-items: center;\n}\n\n.confirmNew,\n.cancelNew {\n  font-size: 0.9rem;\n}\n\n.confirmNew {\n  margin-left: auto;\n  margin-right: 10px;\n}\n"],sourceRoot:""}]);const A=i},363:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".newNote {\n  margin-left: 20px;\n}\n\nmain[data-list=\"NotesSection\"] .listView {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.noteItem {\n  width: 220px;\n  height: 240px;\n}\n\n.noteItem:nth-child(even) {\n  transform: rotate(4deg);\n  position: relative;\n  top: 5px;\n}\n\n.noteItem:nth-child(3n) {\n  transform: rotate(-3deg);\n  position: relative;\n  top: -5px;\n}\n\n.noteItem:nth-child(5n) {\n  transform: rotate(5deg);\n  position: relative;\n  top: -10px;\n}\n\n.noteText {\n  border: none;\n  padding: 20px;\n  height: 100%;\n  width: 100%;\n  font-size: 1.3rem;\n  font-weight: 400;\n  border: 1px solid #e8e8e8;\n  background: #ffff88;\n  /* Old browsers */\n  background: -moz-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* FF3.6+ */\n  background: -webkit-gradient(\n    linear,\n    left top,\n    right bottom,\n    color-stop(81%, #ffff88),\n    color-stop(82%, #ffff88),\n    color-stop(82%, #ffff88),\n    color-stop(100%, #ffffc6)\n  );\n  /* Chrome,Safari4+ */\n  background: -webkit-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* Chrome10+,Safari5.1+ */\n  background: -o-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* Opera 11.10+ */\n  background: -ms-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* IE10+ */\n  background: linear-gradient(\n    135deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* W3C */\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffff88', endColorstr='#ffffc6', GradientType=1);\n  /* IE6-9 fallback on horizontal gradient */\n  border-bottom-right-radius: 60px 10px;\n}\n\n.noteText:focus {\n  outline: none !important;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n  transition: box-shadow 0.3s;\n}\n\n.deleteNote {\n  position: relative;\n  top: -238px;\n  right: -193px;\n  width: fit-content;\n  z-index: 10;\n  color: rgb(179, 179, 179);\n}\n\n.deleteNote:hover {\n  color: red;\n  transition: color 0.3s;\n}\n","",{version:3,sources:["webpack://./src/components/notes.css"],names:[],mappings:"AAAA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,wBAAwB;EACxB,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,WAAW;EACX,iBAAiB;EACjB,gBAAgB;EAChB,yBAAyB;EACzB,mBAAmB;EACnB,iBAAiB;EACjB;;;;;;GAMC;EACD,WAAW;EACX;;;;;;;;GAQC;EACD,oBAAoB;EACpB;;;;;;GAMC;EACD,yBAAyB;EACzB;;;;;;GAMC;EACD,iBAAiB;EACjB;;;;;;GAMC;EACD,UAAU;EACV;;;;;;GAMC;EACD,QAAQ;EACR,kHAAkH;EAClH,0CAA0C;EAC1C,qCAAqC;AACvC;;AAEA;EACE,wBAAwB;EACxB,2CAA2C;EAC3C,2CAA2C;EAC3C,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,kBAAkB;EAClB,WAAW;EACX,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,sBAAsB;AACxB",sourcesContent:[".newNote {\n  margin-left: 20px;\n}\n\nmain[data-list=\"NotesSection\"] .listView {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.noteItem {\n  width: 220px;\n  height: 240px;\n}\n\n.noteItem:nth-child(even) {\n  transform: rotate(4deg);\n  position: relative;\n  top: 5px;\n}\n\n.noteItem:nth-child(3n) {\n  transform: rotate(-3deg);\n  position: relative;\n  top: -5px;\n}\n\n.noteItem:nth-child(5n) {\n  transform: rotate(5deg);\n  position: relative;\n  top: -10px;\n}\n\n.noteText {\n  border: none;\n  padding: 20px;\n  height: 100%;\n  width: 100%;\n  font-size: 1.3rem;\n  font-weight: 400;\n  border: 1px solid #e8e8e8;\n  background: #ffff88;\n  /* Old browsers */\n  background: -moz-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* FF3.6+ */\n  background: -webkit-gradient(\n    linear,\n    left top,\n    right bottom,\n    color-stop(81%, #ffff88),\n    color-stop(82%, #ffff88),\n    color-stop(82%, #ffff88),\n    color-stop(100%, #ffffc6)\n  );\n  /* Chrome,Safari4+ */\n  background: -webkit-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* Chrome10+,Safari5.1+ */\n  background: -o-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* Opera 11.10+ */\n  background: -ms-linear-gradient(\n    -45deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* IE10+ */\n  background: linear-gradient(\n    135deg,\n    #ffff88 81%,\n    #ffff88 82%,\n    #ffff88 82%,\n    #ffffc6 100%\n  );\n  /* W3C */\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffff88', endColorstr='#ffffc6', GradientType=1);\n  /* IE6-9 fallback on horizontal gradient */\n  border-bottom-right-radius: 60px 10px;\n}\n\n.noteText:focus {\n  outline: none !important;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n  transition: box-shadow 0.3s;\n}\n\n.deleteNote {\n  position: relative;\n  top: -238px;\n  right: -193px;\n  width: fit-content;\n  z-index: 10;\n  color: rgb(179, 179, 179);\n}\n\n.deleteNote:hover {\n  color: red;\n  transition: color 0.3s;\n}\n"],sourceRoot:""}]);const A=i},369:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".sidebar {\n  padding: 30px 30px 30px 0;\n  grid-area: sidebar;\n  font-size: 1.3rem;\n  font-weight: 500;\n  height: 100%;\n  background-color: white;\n  border-top-left-radius: var(--main-border-radius);\n}\n\n.sidebar li {\n  margin-top: 10px;\n  padding: var(--sidebar-padding);\n}\n\n#projectsList {\n  padding: 0;\n}\n\n#notes {\n  margin-top: 50px;\n}\n\n.projects {\n  padding: var(--sidebar-padding);\n  display: flex;\n  margin-bottom: 10px;\n  align-items: center;\n}\n\n.projectsBtn {\n  margin-left: 10px;\n}\n\n.projectItem {\n  display: grid;\n  grid-template-columns: 22px 130px 30px;\n  grid-template-rows: 22px;\n  font-size: 1rem;\n  font-weight: 300;\n  padding-left: var(--sidebar-padding);\n}\n\n.projectName {\n  align-self: center;\n  padding: 8px 5px !important;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.projectLength {\n  font-size: 0.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--main-color);\n  background-color: rgb(245, 245, 245);\n  border-radius: 50%;\n}\n","",{version:3,sources:["webpack://./src/components/sidebar.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,YAAY;EACZ,uBAAuB;EACvB,iDAAiD;AACnD;;AAEA;EACE,gBAAgB;EAChB,+BAA+B;AACjC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,+BAA+B;EAC/B,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,wBAAwB;EACxB,eAAe;EACf,gBAAgB;EAChB,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,2BAA2B;EAC3B,gBAAgB;EAChB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,wBAAwB;EACxB,oCAAoC;EACpC,kBAAkB;AACpB",sourcesContent:[".sidebar {\n  padding: 30px 30px 30px 0;\n  grid-area: sidebar;\n  font-size: 1.3rem;\n  font-weight: 500;\n  height: 100%;\n  background-color: white;\n  border-top-left-radius: var(--main-border-radius);\n}\n\n.sidebar li {\n  margin-top: 10px;\n  padding: var(--sidebar-padding);\n}\n\n#projectsList {\n  padding: 0;\n}\n\n#notes {\n  margin-top: 50px;\n}\n\n.projects {\n  padding: var(--sidebar-padding);\n  display: flex;\n  margin-bottom: 10px;\n  align-items: center;\n}\n\n.projectsBtn {\n  margin-left: 10px;\n}\n\n.projectItem {\n  display: grid;\n  grid-template-columns: 22px 130px 30px;\n  grid-template-rows: 22px;\n  font-size: 1rem;\n  font-weight: 300;\n  padding-left: var(--sidebar-padding);\n}\n\n.projectName {\n  align-self: center;\n  padding: 8px 5px !important;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.projectLength {\n  font-size: 0.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--main-color);\n  background-color: rgb(245, 245, 245);\n  border-radius: 50%;\n}\n"],sourceRoot:""}]);const A=i},563:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,'.list {\n  padding: 0 20px;\n  grid-area: list;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-top-right-radius: var(--main-border-radius);\n}\n\n.topRow,\n.listView {\n  width: max(500px, 100%);\n  background-color: white;\n}\n\n.topRow {\n  display: flex;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-top: 20px;\n  border-top-right-radius: var(--main-border-radius);\n}\n\n.listTitle {\n  margin-left: 40px;\n}\n\n.listBtn {\n  margin-left: 20px;\n}\n\n.dueDate {\n  margin-left: auto;\n  margin-right: 95px;\n}\n\n.todo {\n  margin: 5px 0;\n  display: grid;\n  grid-template-columns: 15px 1fr 110px 25px 30px;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0 15px;\n  border-radius: 20px;\n}\n\n.todo:hover {\n  background-color: var(--sub-color);\n  transition: all 0.5s ease-out;\n}\n\n/* .todo:nth-child(even){\n  background-color: rgb(250, 250, 250);\n} */\n\n.todoName {\n  padding: 10px 10px;\n}\n\n.todoDesc {\n  grid-column: 2 / span 4;\n  font-size: 0.8rem;\n  padding: 10px 20px 20px 20px;\n}\n\n.todoDate {\n  font-size: 0.8rem;\n  color: var(--main-color);\n}\n\n.sortDate {\n  color: var(--main-color);\n}\n\n.delProject,\n.delTodo,\n.editTodo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: rgb(0, 0, 0, 0.2);\n}\n\n.delProject:hover,\n.delTodo:hover {\n  color: red;\n  transition: color 0.5s ease;\n}\n\n.editTodo:hover {\n  color: rgba(0, 0, 0, 0.5);\n  transition: color 0.5s ease;\n}\n\n/* Remove default checkbox styles */\ninput[type="checkbox"] {\n  /* Add if not using autoprefixer */\n  -webkit-appearance: none;\n  appearance: none;\n  /* For iOS < 15 to remove gradient background */\n  background-color: #fff;\n  /* Not removed via appearance */\n  margin: 0;\n}\n\ninput[type="checkbox"] {\n  appearance: none;\n  background-color: #fff;\n  margin: 0;\n  font: inherit;\n  color: grey;\n  width: 0.9rem;\n  height: 0.9rem;\n  border: 0.1rem solid grey;\n  border-radius: 0.15em;\n  transform: translateY(-0.075em);\n  display: grid;\n  place-content: center;\n}\n\ninput[type="checkbox"]::before {\n  content: "";\n  width: 0.65rem;\n  height: 0.65rem;\n  transform: scale(0);\n  transition: 120ms transform ease-in-out;\n  /* Checked color */\n  box-shadow: inset 1em 1em rgb(228, 228, 228);\n}\n\ninput[type="checkbox"]:checked::before {\n  transform: scale(1);\n}\n',"",{version:3,sources:["webpack://./src/components/todoList.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,eAAe;EACf,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kDAAkD;AACpD;;AAEA;;EAEE,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,oBAAoB;EACpB,iBAAiB;EACjB,kDAAkD;AACpD;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,+CAA+C;EAC/C,mBAAmB;EACnB,eAAe;EACf,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,kCAAkC;EAClC,6BAA6B;AAC/B;;AAEA;;GAEG;;AAEH;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,iBAAiB;EACjB,4BAA4B;AAC9B;;AAEA;EACE,iBAAiB;EACjB,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,wBAAwB;AAC1B;;AAEA;;EAEE,UAAU;EACV,2BAA2B;AAC7B;;AAEA;EACE,yBAAyB;EACzB,2BAA2B;AAC7B;;AAEA,mCAAmC;AACnC;EACE,kCAAkC;EAClC,wBAAwB;EACxB,gBAAgB;EAChB,+CAA+C;EAC/C,sBAAsB;EACtB,+BAA+B;EAC/B,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,WAAW;EACX,aAAa;EACb,cAAc;EACd,yBAAyB;EACzB,qBAAqB;EACrB,+BAA+B;EAC/B,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,eAAe;EACf,mBAAmB;EACnB,uCAAuC;EACvC,kBAAkB;EAClB,4CAA4C;AAC9C;;AAEA;EACE,mBAAmB;AACrB",sourcesContent:['.list {\n  padding: 0 20px;\n  grid-area: list;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-top-right-radius: var(--main-border-radius);\n}\n\n.topRow,\n.listView {\n  width: max(500px, 100%);\n  background-color: white;\n}\n\n.topRow {\n  display: flex;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-top: 20px;\n  border-top-right-radius: var(--main-border-radius);\n}\n\n.listTitle {\n  margin-left: 40px;\n}\n\n.listBtn {\n  margin-left: 20px;\n}\n\n.dueDate {\n  margin-left: auto;\n  margin-right: 95px;\n}\n\n.todo {\n  margin: 5px 0;\n  display: grid;\n  grid-template-columns: 15px 1fr 110px 25px 30px;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0 15px;\n  border-radius: 20px;\n}\n\n.todo:hover {\n  background-color: var(--sub-color);\n  transition: all 0.5s ease-out;\n}\n\n/* .todo:nth-child(even){\n  background-color: rgb(250, 250, 250);\n} */\n\n.todoName {\n  padding: 10px 10px;\n}\n\n.todoDesc {\n  grid-column: 2 / span 4;\n  font-size: 0.8rem;\n  padding: 10px 20px 20px 20px;\n}\n\n.todoDate {\n  font-size: 0.8rem;\n  color: var(--main-color);\n}\n\n.sortDate {\n  color: var(--main-color);\n}\n\n.delProject,\n.delTodo,\n.editTodo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: rgb(0, 0, 0, 0.2);\n}\n\n.delProject:hover,\n.delTodo:hover {\n  color: red;\n  transition: color 0.5s ease;\n}\n\n.editTodo:hover {\n  color: rgba(0, 0, 0, 0.5);\n  transition: color 0.5s ease;\n}\n\n/* Remove default checkbox styles */\ninput[type="checkbox"] {\n  /* Add if not using autoprefixer */\n  -webkit-appearance: none;\n  appearance: none;\n  /* For iOS < 15 to remove gradient background */\n  background-color: #fff;\n  /* Not removed via appearance */\n  margin: 0;\n}\n\ninput[type="checkbox"] {\n  appearance: none;\n  background-color: #fff;\n  margin: 0;\n  font: inherit;\n  color: grey;\n  width: 0.9rem;\n  height: 0.9rem;\n  border: 0.1rem solid grey;\n  border-radius: 0.15em;\n  transform: translateY(-0.075em);\n  display: grid;\n  place-content: center;\n}\n\ninput[type="checkbox"]::before {\n  content: "";\n  width: 0.65rem;\n  height: 0.65rem;\n  transform: scale(0);\n  transition: 120ms transform ease-in-out;\n  /* Checked color */\n  box-shadow: inset 1em 1em rgb(228, 228, 228);\n}\n\ninput[type="checkbox"]:checked::before {\n  transform: scale(1);\n}\n'],sourceRoot:""}]);const A=i},426:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(369),s=t(563),d=t(38),c=t(363),l=i()(r());l.i(A.Z),l.i(s.Z),l.i(d.Z),l.i(c.Z),l.push([n.id,':root {\n  --sidebar-padding: 0 35px;\n  --main-border-radius: 35px;\n  --main-color: rgb(136, 0, 255);\n  --sub-color: rgb(242, 226, 255);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nul {\n  list-style-type: none;\n}\n\nbutton {\n  padding: 5px 15px;\n  border-radius: 5px;\n  border: none;\n  font-weight: 700;\n  color: white;\n  background-color: var(--main-color);\n}\n\ntextarea {\n  resize: none;\n}\n\nhtml {\n  background-color: var(--main-color);\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 250px 1fr;\n  grid-template-rows: 50px 1fr;\n  grid-template-areas:\n    "header header"\n    "sidebar list";\n  height: 100%;\n}\n\nheader {\n  grid-area: header;\n  background-color: var(--main-color);\n  display: flex;\n  align-items: center;\n  padding-left: 35px;\n  color: white;\n}\n\n.selectable {\n  padding-top: 5px !important;\n  padding-bottom: 5px !important;\n}\n\n.selectable:hover {\n  background-color: rgb(235, 235, 235);\n  border-top-right-radius: 50px;\n  border-bottom-right-radius: 50px;\n  transition: all 0.2s ease-in-out;\n}\n\n.selected {\n  background-color: var(--sub-color);\n  border-top-right-radius: 50px;\n  border-bottom-right-radius: 50px;\n  transition: background-color 0.2s ease-in;\n}\n\n.collapse {\n  display: none;\n  overflow: hidden;\n}\n\n.hide {\n  opacity: 0;\n  transition: opacity 0s, opacity 0.5s linear;\n}\n\n.hide:hover {\n  opacity: 1;\n}\n\n.strike {\n  /* text-decoration: line-through; */\n  opacity: 0.2;\n}\n\ni,\nbutton,\n.selectable,\n.todoName,\n.editTodo,\n.delTodo,\n.sortDate,\ninput[type="checkbox"] {\n  cursor: pointer;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAKA;EACE,yBAAyB;EACzB,0BAA0B;EAC1B,8BAA8B;EAC9B,+BAA+B;AACjC;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,yCAAyC;AAC3C;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;EAChB,YAAY;EACZ,mCAAmC;AACrC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,mCAAmC;AACrC;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,gCAAgC;EAChC,4BAA4B;EAC5B;;kBAEgB;EAChB,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,mCAAmC;EACnC,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,2BAA2B;EAC3B,8BAA8B;AAChC;;AAEA;EACE,oCAAoC;EACpC,6BAA6B;EAC7B,gCAAgC;EAChC,gCAAgC;AAClC;;AAEA;EACE,kCAAkC;EAClC,6BAA6B;EAC7B,gCAAgC;EAChC,yCAAyC;AAC3C;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,UAAU;EACV,2CAA2C;AAC7C;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,mCAAmC;EACnC,YAAY;AACd;;AAEA;;;;;;;;EAQE,eAAe;AACjB",sourcesContent:['@import "./components/sidebar.css";\n@import "./components/todoList.css";\n@import "./components/editTodo.css";\n@import "./components/notes.css";\n\n:root {\n  --sidebar-padding: 0 35px;\n  --main-border-radius: 35px;\n  --main-color: rgb(136, 0, 255);\n  --sub-color: rgb(242, 226, 255);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nul {\n  list-style-type: none;\n}\n\nbutton {\n  padding: 5px 15px;\n  border-radius: 5px;\n  border: none;\n  font-weight: 700;\n  color: white;\n  background-color: var(--main-color);\n}\n\ntextarea {\n  resize: none;\n}\n\nhtml {\n  background-color: var(--main-color);\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 250px 1fr;\n  grid-template-rows: 50px 1fr;\n  grid-template-areas:\n    "header header"\n    "sidebar list";\n  height: 100%;\n}\n\nheader {\n  grid-area: header;\n  background-color: var(--main-color);\n  display: flex;\n  align-items: center;\n  padding-left: 35px;\n  color: white;\n}\n\n.selectable {\n  padding-top: 5px !important;\n  padding-bottom: 5px !important;\n}\n\n.selectable:hover {\n  background-color: rgb(235, 235, 235);\n  border-top-right-radius: 50px;\n  border-bottom-right-radius: 50px;\n  transition: all 0.2s ease-in-out;\n}\n\n.selected {\n  background-color: var(--sub-color);\n  border-top-right-radius: 50px;\n  border-bottom-right-radius: 50px;\n  transition: background-color 0.2s ease-in;\n}\n\n.collapse {\n  display: none;\n  overflow: hidden;\n}\n\n.hide {\n  opacity: 0;\n  transition: opacity 0s, opacity 0.5s linear;\n}\n\n.hide:hover {\n  opacity: 1;\n}\n\n.strike {\n  /* text-decoration: line-through; */\n  opacity: 0.2;\n}\n\ni,\nbutton,\n.selectable,\n.todoName,\n.editTodo,\n.delTodo,\n.sortDate,\ninput[type="checkbox"] {\n  cursor: pointer;\n}'],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],d=o.base?s[0]+o.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=t(l),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(f);else{var m=r(f,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=o(n,r),d=0;d<a.length;d++){var c=t(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{GD:()=>tn,Hg:()=>on,uV:()=>J,rW:()=>K,mW:()=>F,Vg:()=>$,ES:()=>nn,eV:()=>Q,Yb:()=>en,qQ:()=>an,Tl:()=>rn,$w:()=>_,id:()=>G});var n=t(379),e=t.n(n),r=t(795),a=t.n(r),i=t(569),A=t.n(i),s=t(565),d=t.n(s),c=t(216),l=t.n(c),p=t(589),f=t.n(p),m=t(426),u={};u.styleTagTransform=f(),u.setAttributes=d(),u.insert=A().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=l(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;class E{constructor(n,e,t="No description"){this.name=n,this.dueDate=e,this.desc=t,this.completed=!1}}function C(n){n.completed=!n.completed}class g{constructor(n){this.name=n}list=[]}class B{constructor(n=""){this.text=n}}function h(n){const e=K(),t=document.createElement("div"),o=document.createElement("textarea"),r=document.createElement("div");t.classList.add("noteItem"),o.classList.add("noteText"),r.classList.add("deleteNote"),o.placeholder="add brief note...",r.innerHTML='<i class="fa-solid fa-delete-left"></i>',o.value=n.text,t.append(o,r),q.append(t),r.addEventListener("click",(function(){e.splice(e.indexOf(n),1),an("notes",e),k()})),o.addEventListener("change",(function(){var t,o;t=n,o=this.value,t.text=o,an("notes",e)}))}const b=document.createElement("button");function x(n){const e=F();b.remove(),n.list.forEach((e=>{const t=function(n,e){const t=document.createElement("li"),o=document.createElement("p"),r=document.createElement("span"),a=document.createElement("div"),i=document.createElement("div"),A=document.createElement("input"),s=document.createElement("div");return A.type="checkbox",a.innerHTML='<i class="fa-regular fa-pen-to-square"></i>',i.innerHTML='<i class="fa-solid fa-delete-left"></i>',o.textContent=n.name,r.textContent=tn(n.dueDate),s.textContent=n.desc,A.classList.add("checkComplete"),t.classList.add("todo"),o.classList.add("todoName"),r.classList.add("todoDate"),s.classList.add("todoDesc"),s.classList.add("collapse"),a.classList.add("editTodo"),a.classList.add("hide"),i.classList.add("hide"),i.classList.add("delTodo"),t.append(A,o,r,a,i,s),n.completed&&(A.checked=!0,o.classList.add("strike"),r.classList.add("strike"),a.classList.remove("hide"),i.classList.remove("hide")),a.addEventListener("click",(()=>{!function(n){const e=document.createElement("div"),t=document.createElement("div"),o=document.createElement("label"),r=document.createElement("label"),a=document.createElement("label"),i=document.createElement("input"),A=document.createElement("input"),s=document.createElement("textarea"),d=document.createElement("button"),c=document.createElement("button");e.classList.add("edits"),t.classList.add("editInputs"),o.textContent="Name:",r.textContent="Due:",a.textContent="Description:",d.textContent="Confirm",c.textContent="Cancel",o.htmlFor="editName",r.htmlFor="editDate",a.htmlFor="editDesc",i.id="editName",A.id="editDate",s.id="editDesc",d.id="editAccept",c.id="editCancel",i.type="text",A.type="date",i.value=n.name,A.value=n.dueDate,s.value=n.desc,t.append(o,i,a,s,r,A,d,c),e.append(t),L.append(e),d.addEventListener("click",(()=>{const t=i.value,o=A.value,r=s.value;var a;(function(n,e){n.name=e})(n,t),a=o,n.dueDate=a,function(n,e){n.desc=e}(n,r),en(e),en(q),"allInbox"===L.dataset.list?w():x(J()),e.remove()})),c.addEventListener("click",(function(){e.remove()}))}(n)})),i.addEventListener("click",(()=>{var t,o;o=n,(t=e).list.splice(t.list.indexOf(o),1),en(q),en(I),v(),"allInbox"===L.dataset.list?w():x(e)})),A.addEventListener("click",(()=>{const e=F();C(n),an("projects",e),n.completed?(o.classList.add("strike"),r.classList.add("strike")):(o.classList.remove("strike"),r.classList.remove("strike"))})),o.addEventListener("click",(function(){s.classList.toggle("collapse"),t.classList.toggle("selected")})),t}(e,n);q.appendChild(t),_(n)})),an("projects",e)}function v(){const n=F();b.remove(),n.forEach(((n,e)=>{const t=function(n,e){const t=F(),o=document.createElement("li"),r=document.createElement("span"),a=document.createElement("p"),i=document.createElement("div");function A(){L.dataset.list=n.name,_(n),O.textContent=n.name,O.after(Z),M.append(U),en(q),x(t[e])}return i.innerHTML='<i class="fa-solid fa-delete-left"></i>',r.textContent=n.list.length,a.textContent=n.name,a.classList.add("projectName"),i.classList.add("delProject"),r.classList.add("projectLength"),o.classList.add("projectItem"),o.classList.add("selectable"),i.classList.add("hide"),o.append(r,a,i),a.addEventListener("click",A),r.addEventListener("click",A),i.addEventListener("click",(()=>{G(t.filter((e=>e!==n))),en(I),v(),w()})),o.addEventListener("click",on),o.addEventListener("mouseenter",(()=>{i.classList.remove("hide")})),o.addEventListener("mouseleave",(()=>{i.classList.add("hide")})),o}(n,e);I.appendChild(t)})),an("projects",n)}function w(){const n=F();O.after(M),Z.remove(),U.remove(),L.dataset.list="allInbox",O.textContent="Inbox",en(q),n.forEach((n=>{x(n)}))}function k(){const n=K();en(q),M.remove(),Z.remove(),L.dataset.list="NotesSection",O.textContent="Notes",O.after(b),n.forEach((n=>{h(n)}))}function y(n,e){return()=>{const t=document.createElement("div"),o=document.createElement("input"),r=document.createElement("input"),a=document.createElement("textarea"),i=document.createElement("button"),A=document.createElement("button"),s=document.createElement("div");t.classList.add("newInputs"),o.classList.add("newName"),r.classList.add("newDate"),a.classList.add("newDesc"),i.classList.add("confirmNew"),A.classList.add("cancelNew"),s.classList.add("newInputBottom"),o.placeholder=`add a ${e}...`,a.placeholder="add a breif description",o.type="text",r.type="date",i.textContent="Confirm",A.textContent="Cancel",en(n),t.append(o),"project"===e&&(t.append(i,A),v(),o.addEventListener("keypress",H(o,I,e)),i.addEventListener("click",H(o,I,e))),"todo"===e&&(s.append(r,i,A),t.append(a,s),x(J()),o.addEventListener("keypress",H(o,q,e,r,a)),i.addEventListener("click",H(o,q,e,r,a))),A.addEventListener("click",(()=>t.remove())),n.append(t),o.select()}}b.textContent="Add",b.classList.add("newNote"),b.addEventListener("click",("",()=>{const n=K(),e=new B("");return h(e),nn(e),an("notes",n),e}));const L=document.querySelector("main"),D=L.querySelector(".sidebar"),j=D.querySelector("#inbox"),S=D.querySelector("#today"),N=D.querySelector("#week"),T=D.querySelector("#notes"),z=D.querySelectorAll(".selectable"),I=L.querySelector(".projectsView"),Y=L.querySelector(".projectsBtn"),W=L.querySelector(".list"),q=W.querySelector(".listView"),Z=W.querySelector(".listBtn"),M=W.querySelector(".dueDate"),U=W.querySelector(".sortDate"),O=W.querySelector(".listTitle");function R(n){const e=new g(n);return Q(e),e}function H(n,e,t,o,r){return a=>{if("Enter"===a.key||"confirmNew"===a.target.classList){const a=n.value;if(en(e),"project"===t&&(R(a),v()),"todo"===t){const n=J();!function(n,e,t){const o=new E(n,e.value,t.value);$(o)}(a,o,r),x(n),en(I),v()}}}}Y.addEventListener("click",y(I,"project")),Z.addEventListener("click",y(q,"todo")),j.addEventListener("click",w),S.addEventListener("click",(function(){O.after(M),Z.remove(),b.remove(),en(q),L.dataset.list="TodaySection",O.textContent="Today"})),N.addEventListener("click",(function(){O.after(M),Z.remove(),b.remove(),en(q),L.dataset.list="WeeklySection",O.textContent="This Week"})),T.addEventListener("click",k),U.addEventListener("click",rn),z.forEach((n=>{n.addEventListener("click",on)}));let V,X=[],P=[];const F=()=>P;function G(n){return P=n,P}const Q=n=>P.push(n),J=()=>V,$=n=>V.list.push(n);function _(n){return V=n,V}const K=()=>X,nn=n=>X.push(n);function en(n){for(;n.firstChild;)n.removeChild(n.firstChild)}function tn(n){if(!n)return"";const e=n.split("-");return`${e[1]}/${e[2]}/${e[0]}`}function on(n){D.querySelectorAll(".selectable").forEach((n=>{n.classList.remove("selected")})),n.currentTarget.classList.add("selected")}function rn(){U.dataset.sort||(U.dataset.sort="asc"),P.forEach((n=>{n.list.sort(((n,e)=>{if("asc"===U.dataset.sort){if(n.dueDate>e.dueDate)return 1;if(n.dueDate<e.dueDate)return-1}else if("dsc"===U.dataset.sort){if(n.dueDate>e.dueDate)return-1;if(n.dueDate<e.dueDate)return 1}return 0}))})),"asc"===U.dataset.sort?(U.dataset.sort="dsc",U.innerHTML='<i class="fa-solid fa-sort-up"></i>'):"dsc"===U.dataset.sort&&(U.dataset.sort="asc",U.innerHTML='<i class="fa-solid fa-sort-down"></i>'),en(q),x(V)}function an(n,e){localStorage.setItem(n,JSON.stringify(e))}function An(n){var e;"projects"===n?G(JSON.parse(localStorage.getItem(n))):"notes"===n&&(e=JSON.parse(localStorage.getItem(n)),X=e)}void 0===localStorage.projects&&((()=>{const n=R("Project"),e=R("Chores"),t=new E("Create delete button","2022-09-29","Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nam libero justo laoreet sit amet cursus. Amet est placerat in egestas erat.");n.list.push(t),C(t);const o=new E("Create a way to update values","2022-09-29");n.list.push(o),C(o);const r=new E("Expand for description","2022-09-30","Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nam libero justo laoreet sit amet cursus. Amet est placerat in egestas erat.");n.list.push(r),C(r);const a=new E("Create currently selected project function","2022-10-01");n.list.push(a),C(a);const i=new E("Sort dates","2022-10-01");n.list.push(i),C(i);const A=new E("Change date format","2022-10-01");n.list.push(A),C(A);const s=new E("Filter by today","2022-10-01");n.list.push(s);const d=new E("Filter by this week","2022-10-01");n.list.push(d);const c=new E("Add notes section","2022-10-01");n.list.push(c),C(c);const l=new E("Add localStorage abilities","2022-10-06");n.list.push(l),C(l);const p=new E("Clean room",(new Date).toISOString().split("T")[0]);e.list.push(p);const f=new E("Do laundry",(new Date).toISOString().split("T")[0]);e.list.push(f),C(f);const m=new E("Buy groceries",(new Date).toISOString().split("T")[0]);e.list.push(m);const u=new E("Take out the trash",(new Date).toISOString().split("T")[0]);e.list.push(u),C(u)})(),an("projects",P)),void 0===localStorage.notes&&((()=>{const n=new B("oranges\nbananas\napples\ngrapes");nn(n);const e=new B("CPU\nGPU\nRAM\nPSU\nSSD\nMotherboard");nn(e);const t=new B("one\ntwo\nthree\nfour");nn(t);for(let n=0;n<5;n++){const n=new B;nn(n)}})(),an("notes",X)),An("projects"),An("notes"),v(),w()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,